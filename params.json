{"name":"SARA","tagline":"Scheduling Algorithm Reverse Approach for OpenStack","body":"SARA\r\n==========\r\n\r\n## Introduction\r\n\r\nSARA (Scheduling Algorithm Reverse Approach) is an approach proposed by [PKU OSV Team](http://www.ss.pku.edu.cn/) (Peking University Operating System and Virtualization Team) to reverse the scheduling algorithm of OpenStack. It can determine the activated filters and weighers used by a OpenStack instance through analyzing the AMQP packets between OpenStack components. VisualSARA (also referred as OpenSploit in our paper) is a C++ implementation for SARA method. It is a MFC project running under Windows operating system. It is developed by Visual Studio Ultimate 2015 CTP.\r\n\r\nSARA is based on the our paper work \"`SARA: Exploiting Live VM Migration to Reverse the Scheduling Algorithm in Clouds`\" (will published soon), it supports [OpenStack Juno](https://www.openstack.org/). SARA's functionalities includes:\r\n\r\n1. Scheduling simulation for 16 kinds of filters and 3 kinds of weighers.\r\n2. Filter determination.\r\n3. Weigher determination.\r\n4. Calculation of the determination precisions.\r\n\r\nSupported filters and weighers:\r\n\r\n```c++\r\n//IntFilter: 5\r\nFILTER_ADD(\"CoreFilter\",\t\t\t\t\t\t\"int<\",\t\t\t\t\"vcpus\",\t\t\t\"vcpus_free\");\r\nFILTER_ADD(\"RamFilter\",\t\t\t\t\t\t\t\"int<\",\t\t\t\t\"ram\",\t\t\t\t\"ram_free\");\r\nFILTER_ADD(\"DiskFilter\",\t\t\t\t\t\t\"int<\",\t\t\t\t\"disk\",\t\t\t\t\"disk_free\");\r\nFILTER_ADD(\"NumInstancesFilter\",\t\t\t\t\"int<\",\t\t\t\t\"instances\",\t\t\"instances_free\");\r\nFILTER_ADD(\"IoOpsFilter\",\t\t\t\t\t\t\"int<\",\t\t\t\t\"8\",\t\t\t\t\"num_io_ops\");\r\n\r\n//SetFilter: 8\r\nFILTER_ADD(\"AvailabilityZoneFilter\",\t\t\t\"set<\",\t\t\t\t\"zone\",\t\t\t\t\"available_zones\");\r\nFILTER_ADD(\"SameHostFilter\",\t\t\t\t\t\"set<\",\t\t\t\t\"friend_uuid\",\t\t\"uuids\");\r\nFILTER_ADD(\"DifferentHostFilter\",\t\t\t\t\"set<-\",\t\t\t\"friend_uuid\",\t\t\"uuids\");\r\nFILTER_ADD(\"ServerGroupAffinityFilter\",\t\t\t\"set>\",\t\t\t\t\"host_list\",\t\t\"host_name\");\r\nFILTER_ADD(\"ServerGroupAntiAffinityFilter\",\t\t\"set>-\",\t\t\t\"host_list\",\t\t\"host_name\");\r\nFILTER_ADD(\"TypeAffinityFilter\",\t\t\t\t\"set<\",\t\t\t\t\"flavor\",\t\t\t\"flavor_list\");\r\nFILTER_ADD(\"ImagePropertiesFilter\",\t\t\t\t\"set<\",\t\t\t\t\"img_props\",\t\t\"supported_img_props\");\r\nFILTER_ADD(\"ComputeCapabilitiesFilter\",\t\t\t\"set<\",\t\t\t\t\"comp_props\",\t\t\"supported_comp_props\");\r\n\r\n//FuncFilter: 3\r\nFILTER_ADD(\"SimpleCIDRAffinityFilter\",\t\t\t\"func:ip\",\t\t\t\"ip\",\t\t\t\t\"ip\");\r\nFILTER_ADD(\"TrustedFilter\",\t\t\t\t\t\t\"func:trust\",\t\t\"pca\",\t\t\t\t\"trusted_name\");\r\nFILTER_ADD(\"IsolatedHostsFilter\",\t\t\t\t\"func:isolated\",\t\"isolated\",\t\t\t\"isolated\");\r\n\r\n//IntWeigher: 3\r\nWEIGHER_ADD(\"CoreWeigher\",\t\t\t\t\t\t\"int\",\t\t\"vcpus_free\",\t\t0.3);\r\nWEIGHER_ADD(\"RamWeigher\",\t\t\t\t\t\t\"int\",\t\t\"ram_free\",\t\t\t0.5);\r\nWEIGHER_ADD(\"DiskWeigher\",\t\t\t\t\t\t\"int\",\t\t\"disk_free\",\t\t0.2);\r\n```\r\n\r\n## Environment\r\n\r\n1. [Windows operating system (XP above)](http://windows.microsoft.com/en-us/windows/home)\r\n2. [Visual Studio Ultimate 2015 CTP](https://www.visualstudio.com/en-us/downloads/visual-studio-2015-downloads-vs)\r\n\r\n## Dependencies\r\n\r\nThe libraries used by VisualSARA:\r\n\r\n1. [Boost 1.57](http://www.boost.org/)\r\n2. [JSON Spirit 4.08](http://www.codeproject.com/Articles/20027/JSON-Spirit-A-C-JSON-Parser-Generator-Implemented)\r\n3. [CLAPACK 3.2.1](http://www.netlib.org/clapack/)\r\n4. [Armadillo 4.650.2](http://sourceforge.net/projects/arma/)\r\n\r\n## Datasets\r\n\r\nDatasets used by the paper:\r\n\r\n* `sara_filter_type1` - Datasets for Type-I filters\r\n* `sara_filter_type2` - Datasets for Type-II filters\r\n* `sara_weigher` - Datasets for weighers\r\n\r\nYou should change the `strSARAFileBase` variable in `VMTester.cpp` to change the default dataset directory.\r\n\r\nThe naming convention for dataset files is:\r\n\r\n* `sara_host_$HOST_NUMBER$.json` - the host metadata file\r\n* `sara_request_$REQUEST_NUMBER$_$HOST_NUMBER$.json` - the request specification file\r\n* `sara_result_$ENABLED_FILTER_NUMBER$_$REQUEST_NUMBER$_$HOST_NUMBER$.txt` - the scheduling and determination result file\r\n\r\n## Compile\r\n1. Install [VS2015 CTP(Visual Studio Ultimate 2015 CTP)](https://www.visualstudio.com/en-us/downloads/visual-studio-2015-downloads-vs) downloaded from Microsoft website.\r\n2. Download and Configure the libraries VisualSARA used (`Boost, JSON Spirit, CLAPACK, Armadillo`), default paths for these libraries in VisualSARA are: `C:\\lib\\boost_1_57_0, C:\\lib\\json_spirit_v4.08, C:\\lib\\CLAPACK, C:\\lib\\armadillo-4.650.2`, you can modify these paths based on your need.\r\n3. Compile the solution in VS2015.\r\n\r\n\r\n## Usage\r\n1. Switch to the needed dataset directory.\r\n2. Change the `m_iRequestNo, m_iHostNo, m_iFilterNo` variables in `VMTester.cpp` to select input files.\r\n3. Run VisualSARA.\r\n4. The result file will be generated in the dataset directory.\r\n\r\n## Contact Us\r\n1. Issue feedbacks: [Github Issues](https://github.com/openstack-sara/sara/issues/new)\r\n2. Mailbox: luoyang@pku.edu.cn\r\n3. QQ: 515964173\r\n4. Blog: [罗杨@网络安全](http://blog.csdn.net/hsluoyc)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}